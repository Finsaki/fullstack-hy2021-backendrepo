{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","returnDefaultObject","getAllPersons","axios","get","then","response","data","createPerson","newObject","post","updatePerson","id","put","deletePerson","delete","Persons","props","filteredPhonebook","persons","filter","person","name","toLocaleLowerCase","includes","newFilter","map","handlePersonDelete","Person","number","onClick","Filter","value","onChange","handleFilterChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","message","className","Error","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","replacePerson","changedPersonObject","returnedPerson","result","showNoticeMessage","catch","error","showErrorMessage","setTimeout","event","target","preventDefault","some","window","confirm","oldPerson","find","console","log","personObject","concat","personToBeDeleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98178269.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAllPersons = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst createPerson = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  //unused return, mayby useful later\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst returnDefaultObject = { getAllPersons, createPerson, updatePerson, deletePerson }\r\nexport default returnDefaultObject","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\n/*\n* Aki K. 23.09.2021, updated 15.10.2021\n*/\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  //fetching persons data with axios from persons.js module\n  useEffect(() => {\n    personService\n      .getAllPersons()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    //checking if person to be added already exists\n    //could also check if the given newName is empty, but mayby it can be allowed\n    const checkDoublePerson = persons.some(person => person.name === newName)\n    if (checkDoublePerson) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const oldPerson = persons.find(person => person.name === newName)\n        replacePerson(oldPerson)\n      } else {\n        console.log('Phonebook person edit was cancelled')\n      }\n    } else {\n      //creating a new person\n      const personObject = {name: newName, number: newNumber}\n      personService\n      .createPerson(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n      .then((result) => showNoticeMessage(`'${personObject.name}' was added`))\n      //Lets put a catch here as well if adding does not work\n      //Though two different browsers can still add the same name if browser is not refreshed, should that be fixed?\n      .catch(error => {\n        showErrorMessage(`Adding '${personObject.name}' failed. Reason: Unknown`)\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const replacePerson = (person) => {\n    //keep the original but replace the number\n    const changedPersonObject = {...person, number: newNumber }\n    personService\n      .updatePerson(person.id, changedPersonObject)\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== changedPersonObject.id ? person : returnedPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n      //This needs a arrow function to work...otherwise both the success and failure are printed incase of error. I wonder why?\n      .then((result) => showNoticeMessage(`'${changedPersonObject.name}' was edited`))\n      .catch(error => {\n        //I wonder if the info that was already removed in the server should now also be removed from their local view, or could just ask user to refresh browser?\n        showErrorMessage(`Editing '${changedPersonObject.name}' failed. Reason: already removed from the server`)\n      })\n  }\n\n  const showNoticeMessage = (message) => {\n    //clearing out message if previous one is still visible\n    setNotificationMessage(null)\n    //setting a new timed notification message\n    setNotificationMessage(message)\n    setTimeout(() => {\n      setNotificationMessage(null)\n    }, 4000)\n  }\n\n  const showErrorMessage = (message) => {\n    //clearing out message if previous one is still visible\n    setErrorMessage(null)\n    //setting a new timed error message\n    setErrorMessage(message)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 4000)\n  }\n\n  const handlePersonDelete = (id) => {\n    const personToBeDeleted = persons.find(person => person.id === id)\n    if (window.confirm(`Delete person ${personToBeDeleted.name}?`)) {\n      personService\n        .deletePerson(id)\n        //These then functions needs a arrow function to work...otherwise both the success and failure are printed incase of error. I wonder why?\n        .then((result) => setPersons(persons.filter(person => person.id !== id)))\n        .then((result) => showNoticeMessage(`'${personToBeDeleted.name}' was deleted`))\n        .catch(error => {\n          //I wonder if the info that was already removed in the server should now also be removed from their local view, or could just ask user to refresh browser?\n          showErrorMessage(`Deleting '${personToBeDeleted.name}' failed. Reason: already removed from the server`)\n        })\n    } else {\n      console.log('Phonebook person delete was cancelled')\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <Error message={errorMessage} />\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n      <h2>add a new</h2>\n      <PersonForm newName={newName} newNumber={newNumber} addPerson={addPerson} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons persons={persons} newFilter={newFilter} handlePersonDelete={handlePersonDelete} />\n    </div>\n  )\n}\n\nconst Persons = (props) => {\n  const filteredPhonebook = props.persons.filter(person => person.name.toLocaleLowerCase().includes(props.newFilter.toLocaleLowerCase()))\n  //if I dont use arrow function for handlePersonDelete in here then the app will get stuck. But why is that? Mayby because im setting it up with a parameter here...\n  return (\n    <div>\n        {filteredPhonebook.map(person => <Person key={person.id} person={person} handlePersonDelete={() => props.handlePersonDelete(person.id)}/>)}\n    </div>\n  )\n}\n\nconst Person = ({person, handlePersonDelete}) => {\n  return (\n    <div>\n      {person.name} {person.number} <button onClick={handlePersonDelete}>delete</button>\n    </div>\n  )\n}\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with <input value={props.newFilter} onChange={props.handleFilterChange}/>\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.addPerson}>\n        <div>name: <input value={props.newName} onChange={props.handleNameChange}/> </div>\n        <div>number: <input value={props.newNumber} onChange={props.handleNumberChange}/> </div>\n        <div><button type=\"submit\">add</button></div>\n      </form>\n    </div>\n  )\n}\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nconst Error = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}